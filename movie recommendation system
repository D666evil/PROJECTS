{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":4508,"sourceType":"datasetVersion","datasetId":138}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import pandas as pd\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.metrics.pairwise import cosine_similarity\n\ndf = pd.read_csv('/kaggle/input/tmdb-movie-metadata/tmdb_5000_movies.csv')\n\nfeatures = ['id', 'title', 'genres', 'keywords', 'popularity']\n\ndf = df[features].dropna()\n\ndf['genres'] = df['genres'].apply(lambda x: ' '.join([genre['name'] for genre in eval(x)]))\ndf['keywords'] = df['keywords'].apply(lambda x: ' '.join([keyword['name'] for keyword in eval(x)]))\n\ntfidf = TfidfVectorizer(stop_words='english')\ntfidf_matrix = tfidf.fit_transform(df['genres'] + ' ' + df['keywords'])\n\ncosine_sim = cosine_similarity(tfidf_matrix, tfidf_matrix)\n\ndef recommend_movies(title, cosine_sim=cosine_sim, df=df):\n    \n    idx = df[df['title'] == title].index[0]\n    \n    sim_scores = list(enumerate(cosine_sim[idx]))\n    \n    \n    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)\n    \n    \n    sim_scores = sim_scores[1:11] \n    \n    movie_indices = [i[0] for i in sim_scores]\n    \n    return df['title'].iloc[movie_indices]\n","metadata":{"execution":{"iopub.status.busy":"2024-06-23T16:30:15.675494Z","iopub.execute_input":"2024-06-23T16:30:15.676205Z","iopub.status.idle":"2024-06-23T16:30:17.150036Z","shell.execute_reply.started":"2024-06-23T16:30:15.676156Z","shell.execute_reply":"2024-06-23T16:30:17.148702Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"movie_title = 'Gravity'\nrecommendations = recommend_movies(movie_title)\nprint(f\"Recommended movies for '{movie_title}':\")\nprint(recommendations)","metadata":{"execution":{"iopub.status.busy":"2024-06-23T16:30:17.152074Z","iopub.execute_input":"2024-06-23T16:30:17.152459Z","iopub.status.idle":"2024-06-23T16:30:17.174412Z","shell.execute_reply.started":"2024-06-23T16:30:17.152418Z","shell.execute_reply":"2024-06-23T16:30:17.173012Z"},"trusted":true},"execution_count":null,"outputs":[]}]}